[gd_scene load_steps=11 format=2]

[ext_resource path="res://world/World.tscn" type="PackedScene" id=1]
[ext_resource path="res://player/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://world/MainTileMap.tscn" type="PackedScene" id=3]
[ext_resource path="res://spawner/Spawner.tscn" type="PackedScene" id=4]
[ext_resource path="res://Main.gd" type="Script" id=7]
[ext_resource path="res://fog/Fog.tscn" type="PackedScene" id=9]

[sub_resource type="Shader" id=27]
code = "shader_type canvas_item;

uniform sampler2D refraction_map;

uniform vec2 refraction_stretch = vec2(1.0, 1.0);
uniform float refraction_strength = 0.02; // Replace hint_range with a comment about the range (0.0 to 0.1)

uniform vec4 water_tint = vec4(0.2, 0.6, 1.0, 0.1); // Remove source_color
uniform float speed = 0.5; // Replace hint_range with a comment about the range (0.0 to 1.0)

void fragment() {
    // Use global UV coordinates
    vec2 uv = SCREEN_UV;

    // Calculate animated texture coordinates for refraction
    vec2 refraction_uv = vec2(
        mod(uv.x * refraction_stretch.x + TIME * speed, 1.0),
        mod(uv.y * refraction_stretch.y + TIME * speed, 1.0)
    );

    // Get the refraction offset
    vec2 refraction_offset = texture(refraction_map, refraction_uv).xy - 0.5;

    // Apply refraction offset to the screen texture
    vec4 refraction = texture(SCREEN_TEXTURE, uv - refraction_offset * refraction_strength);

    // Blend with the water tint
    vec4 color = vec4(1.0);
    color.rgb = mix(refraction.rgb, water_tint.rgb, water_tint.a);
    COLOR = color;
}
"

[sub_resource type="OpenSimplexNoise" id=29]

[sub_resource type="NoiseTexture" id=30]
seamless = true
noise = SubResource( 29 )

[sub_resource type="ShaderMaterial" id=28]
shader = SubResource( 27 )
shader_param/refraction_stretch = Vector2( 1, 1 )
shader_param/refraction_strength = 0.008
shader_param/water_tint = Plane( 0, 0, 0, 0 )
shader_param/speed = 0.092
shader_param/refraction_map = SubResource( 30 )

[node name="Node2D" type="Node2D"]
script = ExtResource( 7 )

[node name="Fog" parent="." instance=ExtResource( 9 )]
scale = Vector2( 42, 42 )
z_index = -2
grid_size = 1

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( 4064, 1653 )

[node name="Spawner" parent="Player" instance=ExtResource( 4 )]
enemies_parent_nodepath = NodePath("../../TransparentCanvasLayer/Sharks")

[node name="GroundCanvasLayer" type="CanvasLayer" parent="."]
layer = -2
follow_viewport_enable = true

[node name="TilesModulate" type="CanvasModulate" parent="GroundCanvasLayer"]
position = Vector2( 193, 283 )
color = Color( 0.0627451, 0.188235, 0.411765, 1 )

[node name="TileMap" parent="GroundCanvasLayer" instance=ExtResource( 3 )]
position = Vector2( 0, 2209 )

[node name="TransparentCanvasLayer" type="CanvasLayer" parent="."]
layer = -1
follow_viewport_enable = true

[node name="TransparentModulate" type="CanvasModulate" parent="TransparentCanvasLayer"]
position = Vector2( 0, -13 )
color = Color( 0.439216, 0.0901961, 0.0901961, 0 )

[node name="Sharks" type="Node2D" parent="TransparentCanvasLayer"]

[node name="World" parent="." instance=ExtResource( 1 )]
position = Vector2( 0, 1721 )

[node name="Shader" type="CanvasLayer" parent="."]

[node name="WaterShader" type="ColorRect" parent="Shader"]
material = SubResource( 28 )
anchor_right = 1.0
anchor_bottom = 1.0

[connection signal="break_tile" from="Player" to="GroundCanvasLayer/TileMap" method="break_tile"]
[connection signal="tile_broken" from="GroundCanvasLayer/TileMap" to="Player" method="tile_broken"]
